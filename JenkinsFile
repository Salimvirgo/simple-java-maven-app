pipeline {
    agent {
        label 'builder'
    }

    environment {
        sonarqube_token = credentials('sonar-secret-id')
        IMAGE_NAME = "salimvirgo/docker-challenge"
        IMAGE_TAG = "latest"
    }

    stages {

        stage('Checkout') {
            steps {
                echo 'Cloning source code...'
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                    sh 'sudo docker build --no-cache -t ${IMAGE_NAME}:${IMAGE_TAG} .'
            }
        }

        //  Optional: Push Docker image to a registry
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'docker-hub-id',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    sh '''
                        echo "$DOCKER_PASS" | sudo docker login -u "$DOCKER_USER" --password-stdin
                        sudo docker push ${IMAGE_NAME}:${IMAGE_TAG}
                    '''
                }
            }
        }

        stage('Deploy in Agent') {
            steps {
                
                    sh 'sudo docker run -d -p 99:80 ${IMAGE_NAME}:${IMAGE_TAG}'

            }
        }
       
    }

    // post {
    //     success {
    //         echo 'Pipeline executed successfully.'
    //     }
    //     failure {
    //         echo 'Pipeline failed.'
    //     }
    // }
}
